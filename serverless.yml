service:
  name: chosun-sqs-tutorial
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  # - serverless-offline-sqs
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: ap-northeast-2
  profile: hglee
  # stage: dev
  iamRoleStatements:
  - Effect: 'Allow'
    Action: 'sqs:*'
    Resource:
      - Fn::GetAtt: [TutorialSQS, Arn]

functions:
  first:
    handler: first.hello
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - TutorialSQS
              - Arn
          batchSize: 10
          enabled: true
resources:
  Resources:
    TutorialSQS:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.derived.QueueMainName}
        FifoQueue: True
        MessageRetentionPeriod: 604800
        VisibilityTimeout: 60
        ReceiveMessageWaitTimeSeconds: 20
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - TutorialSQSQDL
              - Arn
          maxReceiveCount: 5
    TutorialSQSQDL:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.derived.QueueDlName}
        FifoQueue: True

custom:
  defaults:
    sqsPrefix: ${self:service}-${self:custom.derived.stage}
  derived:
    stage: ${opt:stage, env:SERVERLESS_STAGE, self:custom.defaults.stage}
    QueueMainName: ${self:custom.defaults.sqsPrefix}-MyFirstQueue.fifo
    QueueDlName: ${self:custom.defaults.sqsPrefix}-MyFirstQueueDl.fifo
  serverless-offline-sqs:
    autoCreate: false # create queue if not exists
    apiVersion: "2012-11-05"
    endpoint: http://0.0.0.0:9324